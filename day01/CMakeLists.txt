# Based on https://gitlab.com/CLIUtils/modern-cmake/-/tree/master/examples/extended-project

# Works with 3.14 and tested through 3.27
cmake_minimum_required(VERSION 3.14...3.27)
message("CMake version: ${CMAKE_VERSION}")

# Project name and a few useful settings. Other commands can pick up the results.
project(
        AOC2023
        VERSION 0.1
        DESCRIPTION "Advent of Code 2023"
        LANGUAGES CXX
)

# Only do these if this is the main project, and not if it is included through add_subdirectory
if (CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)

    # Optionally set things like CMAKE_CXX_STANDARD, CMAKE_POSITION_INDEPENDENT_CODE here

    # Let's ensure -std=c++xx instead of -std=g++xx
    set(CMAKE_CXX_EXTENSIONS OFF)

    # Let's nicely support folders in IDEs
    set_property(GLOBAL PROPERTY USE_FOLDERS ON)

    # Testing only available if this is the main app.
    # Note this needs to be done in the main CMakeLists
    # since it calls enable_testing, which must be in the
    # main CMakeLists.
    include(CTest)

endif ()

# The compiled library code is here
add_subdirectory(src)

# The executable code is here
add_subdirectory(apps)

# Testing only available if this is the main app.
# Emergency override MODERN_CMAKE_BUILD_TESTING provided as well.
if ((CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME OR MODERN_CMAKE_BUILD_TESTING)
        AND BUILD_TESTING)
    add_subdirectory(tests)
endif ()
